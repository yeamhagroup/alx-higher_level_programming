    This is the documentation
    for the module: 5-text_indentation
=============================================

This module contains the functions that deal with formated printing.

Functions:
    text_indentation(text):
        This function prints text by splitting it with this '?', '.', ':'
        delimeters. When on of this delimeter is found 2 new lines are printed
        after it any white space is removed after it.

        Args:
            text (str): The string to format

        Return:
            you can uncomment the return statment if you need it for any reason
            I added it for testing the function. but by default it does not
            return any thing.

    # importing and adding neccessary paths where local modules belong.
    >>> import os, sys
    >>> sys.path.insert(0, os.getcwd() + '/../')
    >>> text_indentation = __import__('5-text_indentation').text_indentation
    
    # test with a little complex string.
    >>> testText = """Lorem ipsum dolor sit amet, consectetur adipiscing elit. \
    ... Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? \
    ... Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: \
    ... Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. \
    ... Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum \
    ... rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo \
    ... stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum \
    ... cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio \
    ... beatiorem! Iam ruinas videres"""
    >>> text_indentation(testText)
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres
    
    # test with empty string
    >>> testText = ""
    >>> text_indentation(testText)
    
    # test with string with only white spaces
    >>> testText = "                "
    >>> text_indentation(testText)
    
    # test with string with a newline surrounded by spaces
    >>> testText = "        \n        "
    >>> text_indentation(testText)
    <BLANKLINE>
    
    # test with a string with no delimeter surrounded by space.
    >>> testText = "  this string have no delimeter    "
    >>> text_indentation(testText)
    this string have no delimeter
    
    # test with a string that have no delimeters.
    >>> testText = "this string have no delimeters"
    >>> text_indentation(testText)
    this string have no delimeters

    # test with a string containing sequence of delimeters.
    >>> testText = "?.:?"
    >>> text_indentation(testText)
    ?
    <BLANKLINE>
    .
    <BLANKLINE>
    :
    <BLANKLINE>
    ?
    <BLANKLINE>

    # test with a stirng containing sequence of delimetes and small words.
    >>> testText = "??ss.m::   .s   "
    >>> text_indentation(testText)
    ?
    <BLANKLINE>
    ?
    <BLANKLINE>
    ss.
    <BLANKLINE>
    m:
    <BLANKLINE>
    :
    <BLANKLINE>
    .
    <BLANKLINE>
    s
    
    # test with non string object
    >>> testObject = ("non string object",)
    >>> text_indentation(testObject) # doctest: +ELLIPSIS
    Traceback (most recent call last):
      ...
    TypeError: text must be a string
